name: Publish Python üêç distribution üì¶ to TestPyPI

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Install Sigstore Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/download/v1.4.1/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(python setup.py --version)
          echo "::set-output name=VERSION::$VERSION"

      - name: Sign the artifacts with Sigstore
        run: |
          cosign sign-blob --key cosign.key dist/openspecy_python_interface-${{ steps.get_version.outputs.VERSION }}.tar.gz
          cosign sign-blob --key cosign.key dist/openspecy_python_interface-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl

      - name: Check for existing release
        run: |
          if gh release view v${{ steps.get_version.outputs.VERSION }}; then
            gh release delete v${{ steps.get_version.outputs.VERSION }} -y
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        run: |
          gh release create v${{ steps.get_version.outputs.VERSION }} dist/*.whl dist/*.tar.gz --repo KrisHeathNREL/OpenSpecy-Python-Interface --notes "Release v${{ steps.get_version.outputs.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload signed artifacts
        run: |
          gh release upload v${{ steps.get_version.outputs.VERSION }} dist/*.sigstore.json --repo KrisHeathNREL/OpenSpecy-Python-Interface
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}